{"version":3,"sources":["Icon.js","App.js","reportWebVitals.js","index.js"],"names":["iconStyle","fontSize","margin","Icon","props","code","weather","console","log","style","App","useState","setWeather","locations","setLocations","useEffect","ifClicked","fetch","then","res","ok","json","status","alert","Error","object","catch","error","className","type","value","onChange","e","target","placeholder","onClick","name","description","icon","Math","floor","main","temp","humidity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f2c6ff2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { WiDaySunny } from \"react-icons/wi\";\r\nimport { WiNightClear } from \"react-icons/wi\";\r\nimport { WiDaySunnyOvercast } from \"react-icons/wi\";\r\nimport { WiNightAltPartlyCloudy } from \"react-icons/wi\";\r\nimport { WiDayCloudy } from \"react-icons/wi\";\r\nimport { WiNightAltCloudy } from \"react-icons/wi\";\r\nimport { WiCloudy } from \"react-icons/wi\";\r\nimport { WiDayShowers } from \"react-icons/wi\";\r\nimport { WiNightAltShowers } from \"react-icons/wi\";\r\nimport { WiDayRain } from \"react-icons/wi\";\r\nimport { WiNightAltRain } from \"react-icons/wi\";\r\nimport { WiDayThunderstorm } from \"react-icons/wi\";\r\nimport { WiNightAltThunderstorm } from \"react-icons/wi\";\r\nimport { WiDaySnow } from \"react-icons/wi\";\r\nimport { WiNightAltSnow } from \"react-icons/wi\";\r\nimport { WiDayFog } from \"react-icons/wi\";\r\nimport { WiNightFog } from \"react-icons/wi\";\r\n\r\nconst iconStyle = {\r\n    fontSize: \"10rem\",\r\n    margin: \"10px\",\r\n};\r\n\r\nconst Icon = (props) => {\r\n    const code = props.weather;\r\n    console.log(code);\r\n    return (\r\n        <div>\r\n          {\r\n            (function() {\r\n                if (code === '01d') return (<WiDaySunny style={iconStyle}/>);\r\n                if (code === '01n') return (<WiNightClear style={iconStyle}/>);\r\n                if (code === '02d') return (<WiDaySunnyOvercast style={iconStyle}/>);\r\n                if (code === '02n') return (<WiNightAltPartlyCloudy style={iconStyle}/>);\r\n                if (code === '03d') return (<WiDayCloudy style={iconStyle}/>);\r\n                if (code === '03n') return (<WiNightAltCloudy style={iconStyle}/>);\r\n                if (code === '04d') return (<WiCloudy style={iconStyle}/>);\r\n                if (code === '04n') return (<WiCloudy style={iconStyle}/>);\r\n                if (code === '09d') return (<WiDayShowers style={iconStyle}/>);\r\n                if (code === '09n') return (<WiNightAltShowers style={iconStyle}/>);\r\n                if (code === '10d') return (<WiDayRain style={iconStyle}/>);\r\n                if (code === '10n') return (<WiNightAltRain style={iconStyle}/>);\r\n                if (code === '11d') return (<WiDayThunderstorm style={iconStyle}/>);\r\n                if (code === '11n') return (<WiNightAltThunderstorm style={iconStyle}/>);\r\n                if (code === '13d') return (<WiDaySnow style={iconStyle}/>);\r\n                if (code === '13n') return (<WiNightAltSnow style={iconStyle}/>);\r\n                if (code === '50d') return (<WiDayFog style={iconStyle}/>);\r\n                if (code === '50n') return (<WiNightFog style={iconStyle}/>);\r\n            })()\r\n          }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Icon;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Icon from \"./Icon\";\n\nconst App = () => {\n  const [weather, setWeather] = useState({});\n  const [locations, setLocations] = useState(\"Daegu\");\n  useEffect(() => {\n    ifClicked();\n  }, []);\n  const ifClicked = () => {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${locations}&appid=90eae8f9c6fd233fd7bf46493412100e\n    `)\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n      if (res.status === 404) {\n        return alert(\"Not found\");\n      }\n      alert(\"Not found\");\n      throw new Error(\"Error\");\n      }\n    })\n    .then((object) => {\n      setWeather(object);\n      console.log(weather);\n    })\n    .catch((error) => console.log(error));\n  }\n  return (\n    <div className=\"app\">\n        <div className=\"wrapper\">\n          <div className=\"search\">\n            <input \n              type=\"text\"\n              value={locations}\n              onChange={(e) => setLocations(e.target.value)}\n              placeholder=\"Enter a City\"\n              className=\"location_input\"\n            />\n            <button className=\"searcher\" onClick={ifClicked}>\n              Submit\n            </button>\n          </div>\n          <div className=\"appdata\">\n            <div className=\"city\">{weather?.name}</div>\n            <div className=\"desc\">{weather &&\n                          weather.weather &&\n                          weather.weather[0] &&\n                          weather.weather[0].description}\n            </div>\n            <Icon weather={weather &&\n                          weather.weather &&\n                          weather.weather[0] &&\n                          weather.weather[0].icon}\n                  className=\"wIcon\"\n            />\n            <div className=\"info\">\n            <span className=\"temp\">{Math.floor(weather?.main?.temp-273.15)}â„ƒ</span>/\n            <span className=\"humid\">{weather?.main?.humidity}%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}